version: '3.8'
services:
  frontend:
    build: ./frontend_angular19
    ports:
      - "4200:4200"
    volumes:
      - ./frontend_angular19:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NG_CLI_ANALYTICS=false
    stdin_open: true
    tty: true
    working_dir: /app
    networks:
      - app-network

  backend:
    build: ./backend_spring
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/mydb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=ala112003
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:17
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ala112003
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge